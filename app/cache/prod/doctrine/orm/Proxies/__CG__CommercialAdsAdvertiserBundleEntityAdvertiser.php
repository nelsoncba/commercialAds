<?php

namespace Proxies\__CG__\CommercialAds\AdvertiserBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Advertiser extends \CommercialAds\AdvertiserBundle\Entity\Advertiser implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setStreet($street)
    {
        $this->__load();
        return parent::setStreet($street);
    }

    public function getStreet()
    {
        $this->__load();
        return parent::getStreet();
    }

    public function setNumber($number)
    {
        $this->__load();
        return parent::setNumber($number);
    }

    public function getNumber()
    {
        $this->__load();
        return parent::getNumber();
    }

    public function setFloor($floor)
    {
        $this->__load();
        return parent::setFloor($floor);
    }

    public function getFloor()
    {
        $this->__load();
        return parent::getFloor();
    }

    public function setDoor($door)
    {
        $this->__load();
        return parent::setDoor($door);
    }

    public function getDoor()
    {
        $this->__load();
        return parent::getDoor();
    }

    public function setPostalcode($postalCode)
    {
        $this->__load();
        return parent::setPostalcode($postalCode);
    }

    public function getPostalcode()
    {
        $this->__load();
        return parent::getPostalcode();
    }

    public function setPhone($phone)
    {
        $this->__load();
        return parent::setPhone($phone);
    }

    public function getPhone()
    {
        $this->__load();
        return parent::getPhone();
    }

    public function setHours($hours)
    {
        $this->__load();
        return parent::setHours($hours);
    }

    public function getHours()
    {
        $this->__load();
        return parent::getHours();
    }

    public function setLat($lat)
    {
        $this->__load();
        return parent::setLat($lat);
    }

    public function getLat()
    {
        $this->__load();
        return parent::getLat();
    }

    public function setLng($lng)
    {
        $this->__load();
        return parent::setLng($lng);
    }

    public function getLng()
    {
        $this->__load();
        return parent::getLng();
    }

    public function setImage($image)
    {
        $this->__load();
        return parent::setImage($image);
    }

    public function getImage()
    {
        $this->__load();
        return parent::getImage();
    }

    public function setCity(\CommercialAds\FilterBundle\Entity\City $city = NULL)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function setSubcategory(\CommercialAds\FilterBundle\Entity\Subcategory $subcategory = NULL)
    {
        $this->__load();
        return parent::setSubcategory($subcategory);
    }

    public function getSubcategory()
    {
        $this->__load();
        return parent::getSubcategory();
    }

    public function setUser(\CommercialAds\UserBundle\Entity\User $user = NULL)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function addAd(\CommercialAds\AdBundle\Entity\Ad $ad)
    {
        $this->__load();
        return parent::addAd($ad);
    }

    public function removeAd(\CommercialAds\AdBundle\Entity\Ad $ad)
    {
        $this->__load();
        return parent::removeAd($ad);
    }

    public function getAd()
    {
        $this->__load();
        return parent::getAd();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'description', 'street', 'number', 'floor', 'door', 'postalCode', 'phone', 'hours', 'email', 'lat', 'lng', 'image', 'city', 'subcategory', 'user', 'ad');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}